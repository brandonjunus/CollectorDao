/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  NftMarketplace,
  NftMarketplaceInterface,
} from "../../NFTTest.sol/NftMarketplace";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "nftContract",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "nftId",
        type: "uint256",
      },
    ],
    name: "buy",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nftContract",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "nftId",
        type: "uint256",
      },
    ],
    name: "getPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610219806100206000396000f3fe6080604052600436106100295760003560e01c8063449e815d1461002e578063cce7ec131461006b575b600080fd5b34801561003a57600080fd5b50610055600480360381019061005091906100dd565b61009b565b6040516100629190610152565b60405180910390f35b610085600480360381019061008091906100dd565b6100a7565b6040516100929190610137565b60405180910390f35b6000607b905092915050565b60006001905092915050565b6000813590506100c2816101b5565b92915050565b6000813590506100d7816101cc565b92915050565b600080604083850312156100f057600080fd5b60006100fe858286016100b3565b925050602061010f858286016100c8565b9150509250929050565b6101228161017f565b82525050565b610131816101ab565b82525050565b600060208201905061014c6000830184610119565b92915050565b60006020820190506101676000830184610128565b92915050565b60006101788261018b565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6101be8161016d565b81146101c957600080fd5b50565b6101d5816101ab565b81146101e057600080fd5b5056fea2646970667358221220043f3038d42dc24db8533ce26b3d72d9f8ef556513f9745f7eec876425eb302664736f6c63430008040033";

type NftMarketplaceConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NftMarketplaceConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class NftMarketplace__factory extends ContractFactory {
  constructor(...args: NftMarketplaceConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<NftMarketplace> {
    return super.deploy(overrides || {}) as Promise<NftMarketplace>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): NftMarketplace {
    return super.attach(address) as NftMarketplace;
  }
  override connect(signer: Signer): NftMarketplace__factory {
    return super.connect(signer) as NftMarketplace__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NftMarketplaceInterface {
    return new utils.Interface(_abi) as NftMarketplaceInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): NftMarketplace {
    return new Contract(address, _abi, signerOrProvider) as NftMarketplace;
  }
}
